##########
## vars
##########

## global version
VERSION=0.0.1

## dirs
TOP_PWD=$$PWD
SHADOW_DIR=$$shadowed($$PWD)

## installs
P=$$(PREFIX)
isEmpty(P){
    INSTALL_PREFIX=/usr/local
}else{
    INSTALL_PREFIX=$$P
}

INSTALL_BINS=$$[QT_INSTALL_BINS]
INSTALL_DLL=$$INSTALL_BINS
INSTALL_LIBS=$$[QT_INSTALL_LIBS]
INSTALL_HEADERS=$$[QT_INSTALL_HEADERS]
INSTALL_QML=$$[QT_INSTALL_QML]
INSTALL_DOCS=$$[QT_INSTALL_DOCS]
INSTALL_TRANSLATIONS=$$[QT_INSTALL_TRANSLATIONS]

## override for installing to the shadow build dir and then to a folder called standalone.
#CONFIG+=STANDALONE_INSTALLER
#STANDALONE_INSTALLER{ INSTALL_PREFIX=$$shadowed($$PWD)/standalone }
## when qmake is run a lot of debugging is done.
#CONFIG += QMAKE_DEBUG

osx{}
ios{}

linux{

    INSTALL_BINS=$$INSTALL_PREFIX/bin
    INSTALL_LIBS=$$INSTALL_PREFIX/lib
    INSTALL_HEADERS=$$INSTALL_PREFIX/include
    INSTALL_QML=$$INSTALL_PREFIX/lib/$$ArchLibPath/qt5/qml
    INSTALL_DOCS=$$INSTALL_PREFIX/share/$$TARGET/docs
    INSTALL_LICENSE=$$INSTALL_DOCS

    ArchLibPath=$$system( $${QMAKE_CC} -print-multiarch )
    HOST_ARCH=$$system(gcc -print-multiarch)
    ## Check the target arch and the host arch and see if there the same
    equals( HOST_ARCH, $$ArchLibPath ){
        QMAKE_DEBUG: message( NOT CROSS COMPILING )
        CONFIG +=NOTCROSS
    } else {
        QMAKE_DEBUG: message( CROSS COMPILING )
        CONFIG += CROSS_COMPILING
    }

    ## VIV
    contains(EGLFS_DEVICE_INTEGRATION, eglfs_viv ){
        QMAKE_DEBUG: message( WE HAVE VIVANTE )
        CONFIG += imx6
        DEFINES += IMX=1
    }
    ## BRCM
    contains(EGLFS_DEVICE_INTEGRATION, eglfs_brcm ){
        QMAKE_DEBUG: message( WE HAVE Broadcom )
        CONFIG += raspi
        DEFINES += RASPI=1
    }
    ## MALI
    contains(EGLFS_DEVICE_INTEGRATION, eglfs_mali ){
        QMAKE_DEBUG: message( WE HAVE Samsung )
        CONFIG += mali
        DEFINES += MALI=1
    }
    ## TODO
    ## eglfs_emu, kms
}

win32{
    CONFIG += skip_target_version_ext
}


android{
    QMAKE_CXXFLAGS_RELEASE -= -Os
    QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO -= -Os
}
